<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F06%2F22%2F%E5%BA%9F%E8%AF%9D%E4%B8%8D%E5%A4%9A%E8%AF%B4%E4%BA%86%EF%BC%8Cc%E8%AF%AD%E8%A8%80%E5%A4%A7%E4%BD%9C%E4%B8%9A%E4%BB%A3%E7%A0%81%20%2B%201%2F</url>
    <content type="text"><![CDATA[废话不多说了，c语言大作业代码 + 12019河北省赛的D题，榜单的简易版 23333我不会告诉你们盟盟的题册是我给的hhh 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199#include &lt;stdio.h&gt;#include &lt;string.h&gt;#define minn(a,b) a &gt; b ? a : b ;struct Student&#123; char name[50]; int solve ; int pro[20] ; int pass[20] ; int ifdo[20] ; bool sub ; bool vis ;&#125;team[5005],temp;int bianli(char *m, int n)&#123; int i; for(i = 1; i &lt;= n; ++ i) &#123; if(strcmp(team[i].name,m) == 0 ) return i ; &#125; return 0 ;&#125;int Penalty(Student a,int n)&#123; int i ; int sum = 0 ; for(i = 1; i &lt; n + 1 ; ++ i ) &#123; if(a.ifdo[i] != 0 &amp;&amp; a.pass[i] &gt;= 0 ) sum += a.pro[i]; &#125; return sum ;&#125;int Same(Student a , Student b , int n)&#123; if(Penalty(a,n) == Penalty(b,n) &amp;&amp; a.solve == b.solve) return 1 ; else return 0 ;&#125;void Print(Student *team , int n , int near , int cnt )&#123; int i , k ; printf("Rank Who Solved Penalty"); for(i = 0 ; i &lt; n ; ++ i) printf(" %c",i + 'A') ; printf("\n") ; for(i = 1; i &lt; cnt + 1 ; ++ i) &#123; if(team[i].vis == 0) break ; else &#123; if(Same(team[i],team[i - 1],n)) printf("%4d",near); else &#123; near = i ; printf("%4d",i) ; &#125; &#125; printf(" %43s",team[i].name) ; printf(" %6d",team[i].solve) ; printf(" %7d",Penalty(team[i],n)) ; for(k = 1 ; k &lt; n + 1 ; ++ k) &#123; if(team[i].ifdo[k] == 0) printf(" "); else &#123; if(team[i].pass[k] &gt; 0) printf(" +%d",team[i].pass[k]) ; if(team[i].pass[k] &lt; 0) printf(" %d",team[i].pass[k]) ; if(team[i].pass[k] == 0) printf(" +") ; &#125; &#125; printf("\n") ; &#125;&#125;void Sort(Student *team , int cnt , int n)&#123; int i , j ; for(i = 1 ; i &lt; cnt + 1; ++ i) &#123; for(j = 1 ; j &lt; cnt - i + 1 ; ++ j) &#123; if(team[j].solve &lt; team[j + 1].solve) &#123; temp = team[j] ; team[j] = team[j + 1] ; team[j + 1] = temp ; &#125; if(team[j].solve == team[j + 1].solve ) &#123; if(Penalty(team[j],n) &gt; Penalty(team[j + 1],n)) &#123; temp = team[j] ; team[j] = team[j + 1] ; team[j + 1] = temp ; &#125; if(Penalty(team[j],n) == Penalty(team[j + 1],n)) &#123; if(strcmp(team[j].name,team[j + 1].name) &gt; 0 ) &#123; temp = team[j] ; team[j] = team[j + 1] ; team[j + 1] = temp ; &#125; &#125; &#125; &#125; &#125;&#125;int main(void)&#123; int n, cnt, flag, near, t, num, i, j,nextpos; int zhuang[10] ; char m[205], nowteam[50]; char zhuangtai[10][30] = &#123;"Accepted ","Wrong Answer ","Time Limit Exceeded ", "Compile Error ", "Memory Limit Exceeded ", "Output Limit Exceeded ", "Runtime Error ", "Presentation Error "&#125; ; Student temp ; scanf("%d",&amp;n) ; getchar() ; cnt = 0 ; near = -1 ; while(gets(m) &amp;&amp; m[0] != 'G') &#123; t = ((m[0] - '0') * 10 + (m[1] - '0')) * 60 + (m[3] - '0') * 10 + (m[4] - '0'); num = m[6] - 'A' + 1; memset(zhuang , 0 , sizeof (zhuang)) ; for(i = 0 ; i &lt; 8 ; ++ i) zhuang[i] = strlen(zhuangtai[i]) ; if (m[8] == 'A') nextpos = 8 + zhuang[0] ; if (m[8] == 'W') nextpos = 8 + zhuang[1] ; if (m[8] == 'T') nextpos = 8 + zhuang[2] ; if (m[8] == 'C') continue; if (m[8] == 'M') nextpos = 8 + zhuang[4] ; if (m[8] == 'O') nextpos = 8 + zhuang[5] ; if (m[8] == 'R') nextpos = 8 + zhuang[6] ; if (m[8] == 'P') nextpos = 8 + zhuang[7] ; strcpy(nowteam , m + nextpos); flag = bianli(nowteam,cnt); if(flag == 0 ) &#123; flag = ++ cnt; team[flag].sub = 1; strcpy(team[flag].name , nowteam) ; if(m[8] == 'A') &#123; team[flag].pro[num] += t ; team[flag].pass[num] = 0 ; team[flag].solve += 1 ; &#125; else &#123; team[flag].pro[num] += 20 ; team[flag].pass[num] -= 1 ; &#125; &#125; else &#123; if(team[flag].pass[num] &gt; 0) break ; if(m[8] == 'A') &#123; team[flag].pro[num] += t ; team[flag].pass[num] *= -1 ; team[flag].solve += 1 ; &#125; else &#123; team[flag].pro[num] += 20 ; team[flag].pass[num] -= 1 ; &#125; &#125; team[flag].ifdo[num] = 1 ; team[flag].vis = 1 ; &#125; Sort(team , cnt ,n) ; Print(team , n , near , cnt) ; return 0 ;&#125;]]></content>
  </entry>
  <entry>
    <title><![CDATA[hello hexo]]></title>
    <url>%2F2019%2F05%2F30%2Fhello-hexo%2F</url>
    <content type="text"><![CDATA[哇咔咔]]></content>
  </entry>
</search>
